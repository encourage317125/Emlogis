<?xml version="1.0"?>
<!--  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.emlogis</groupId>
        <artifactId>emlogis-scheduler</artifactId>
        <version>1.0</version>
    </parent>

    <groupId>com.emlogis</groupId>
    <artifactId>scheduler-server</artifactId>
    <version>1.0</version>
    <name>Scheduler Server</name>
    <description>EmLogis Application Server</description>

    <url>http://emlogis.com</url>
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <distribution>repo</distribution>
            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
        </license>
    </licenses>

    <properties>
        <!-- Explicitly declaring the source encoding eliminates the following message: -->
        <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
            resources, i.e. build is platform dependent! -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- JBoss dependency versions -->

        <version.wildfly.maven.plugin>1.0.1.Final</version.wildfly.maven.plugin>

        <version.jboss.spec.javaee.7.0>1.0.0.Final</version.jboss.spec.javaee.7.0>

        <!-- other plugin versions -->
        <version.compiler.plugin>3.1</version.compiler.plugin>
        <version.war.plugin>2.1.1</version.war.plugin>

        <!-- maven-compiler-plugin -->
        <maven.compiler.target>1.7</maven.compiler.target>
        <maven.compiler.source>1.7</maven.compiler.source>

        <!-- EmLogis  Begin -->
        <http-components.version>4.3.1</http-components.version>
        <resteasy.version>3.0.11.Final</resteasy.version>
        <maven.weld.version>2.2.1.Final</maven.weld.version>
        <amazonaws.version>1.9.37</amazonaws.version>
        <!-- <jbpm.version>6.2.0.CR4</jbpm.version> -->
        <!-- EmLogis  End -->
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Define the version of JBoss' Java EE 7 APIs we want to import.
                Any dependencies from org.jboss.spec will have their version defined by this 
                BOM -->
            <!-- JBoss distributes a complete set of Java EE 7 APIs including
                a Bill of Materials (BOM). A BOM specifies the versions of a "stack" (or
                a collection) of artifacts. We use this here so that we always get the correct
                versions of artifacts. Here we use the jboss-javaee-7.0 stack (you can
                read this as the JBoss stack of the Java EE 7 APIs). You can actually
                use this stack with any version of WildFly that implements Java EE 7, not
                just WildFly 8! -->

            <dependency>
                <groupId>org.jboss.spec</groupId>
                <artifactId>jboss-javaee-7.0</artifactId>
                <version>${version.jboss.spec.javaee.7.0}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <dependencies>

        <dependency>
            <groupId>org.joda</groupId>
            <artifactId>joda-convert</artifactId>
            <version>1.8.1</version>
        </dependency>
        <dependency>
            <groupId>de.javakaffee</groupId>
            <artifactId>kryo-serializers</artifactId>
            <version>0.37</version>
        </dependency>

        <dependency>
            <groupId>dom4j</groupId>
            <artifactId>dom4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld.se</groupId>
            <artifactId>weld-se-core</artifactId>
            <version>${maven.weld.version}</version>
        </dependency>
        <!-- Import the Servlet API, we use provided scope as the API is included in JBoss WildFly. -->
        <dependency>
            <groupId>org.jboss.spec.javax.servlet</groupId>
            <artifactId>jboss-servlet-api_3.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the JAX-RS API, we use provided scope as the API is included in JBoss WildFly -->
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>jaxrs-api</artifactId>
            <version>${resteasy.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jaxrs</artifactId>
            <version>${resteasy.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-client</artifactId>
            <version>${resteasy.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jackson-provider</artifactId>
            <version>${resteasy.version}</version>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time-hibernate</artifactId>
            <version>1.3</version>
        </dependency>
        <dependency>
            <groupId>org.jadira.usertype</groupId>
            <artifactId>usertype.core</artifactId>
            <version>3.1.0.GA</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.1-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>4.3.1.Final</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate.common</groupId>
            <artifactId>hibernate-commons-annotations</artifactId>
            <version>4.0.4.Final</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>4.3.5.Final</version>
            <exclusions>
                <exclusion>
                    <groupId>dom4j</groupId>
                    <artifactId>dom4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${http-components.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-core</artifactId>
            <version>1.2.2</version>
        </dependency>

        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-web</artifactId>
            <version>1.2.2</version>
        </dependency>
        <dependency>
            <groupId>org.projectreactor</groupId>
            <artifactId>reactor-core</artifactId>
            <version>${reactor-core.version}</version>
        </dependency>
        <dependency>
            <groupId>com.lmax</groupId>
            <artifactId>disruptor</artifactId>
            <version>${disruptor.version}</version>
        </dependency>

        <dependency>
            <groupId>com.emlogis</groupId>
            <artifactId>scheduler-server-test</artifactId>
            <version>${emlogis.scheduler.version}</version>
        </dependency>

        <dependency>
            <groupId>com.emlogis</groupId>
            <artifactId>scheduler-common</artifactId>
            <version>${emlogis.scheduler.version}</version>
        </dependency>

        <dependency>
            <groupId>net.logstash.log4j</groupId>
            <artifactId>jsonevent-layout</artifactId>
            <version>1.7-SNAPSHOT</version>
        </dependency>
        <dependency>
			<groupId>com.twilio.sdk</groupId>
			<artifactId>twilio-java-sdk</artifactId>
			<version>3.7.2</version>
		</dependency>        
        <!--jbmp dependencies-->
        <dependency>
            <groupId>org.jbpm</groupId>
            <artifactId>jbpm-audit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jbpm</groupId>
            <artifactId>jbpm-bpmn2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jbpm</groupId>
            <artifactId>jbpm-human-task-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jbpm</groupId>
            <artifactId>jbpm-persistence-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jbpm</groupId>
            <artifactId>jbpm-runtime-manager</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jbpm</groupId>
            <artifactId>jbpm-human-task-audit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jbpm</groupId>
            <artifactId>jbpm-human-task-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jbpm</groupId>
            <artifactId>jbpm-kie-services</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jbpm</groupId>
            <artifactId>jbpm-shared-services</artifactId>
        </dependency>
        <dependency>
            <groupId>org.kie</groupId>
            <artifactId>kie-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.kie</groupId>
            <artifactId>kie-server-services</artifactId>
        </dependency>
        <dependency>
            <groupId>org.drools</groupId>
            <artifactId>drools-compiler</artifactId>
        </dependency>
        <dependency>
            <groupId>org.drools</groupId>
            <artifactId>drools-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.drools</groupId>
            <artifactId>drools-decisiontables</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-configuration</groupId>
            <artifactId>commons-configuration</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
        </dependency>

        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk</artifactId>
            <version>${amazonaws.version}</version>
        </dependency>

        <dependency>
            <groupId>org.mnode.ical4j</groupId>
            <artifactId>ical4j</artifactId>
            <version>1.0.5</version>
        </dependency>
        <dependency>
            <groupId>backport-util-concurrent</groupId>
            <artifactId>backport-util-concurrent-java12</artifactId>
            <version>3.1</version>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/resources/templates</directory>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources/notifications</directory>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/integration-test/resources</directory>
            </resource>
        </resources>
        <!-- Set the name of the war, used as the context root when the app 
            is deployed -->
        <finalName>${project.artifactId}</finalName>

        <plugins>
        
        	<!--PLEASE DO NOT REMOVE OR MODIFY THE COMMENTED AREA BELOW-->
        	<!--GRUNT_PLUGIN_START
			<plugin>
				<groupId>pl.allegro</groupId>
				<artifactId>grunt-maven-plugin</artifactId>
				<version>1.5.0</version>
				<configuration>
					<jsSourceDirectory>emlogis/</jsSourceDirectory>
					<warTargetDirectory>emlogis/</warTargetDirectory>
					<target>prod</target>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>create-resources</goal>
							<goal>npm</goal>
							<goal>grunt</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			GRUNT_PLUGIN_END-->
			<!--PLEASE DO NOT REMOVE OR MODIFY THE COMMENTED AREA ABOVE-->
			
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/integration-test/java</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>${version.war.plugin}</version>
                <configuration>
                    <!-- Java EE 7 doesn't require web.xml, Maven needs to catch up! -->
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <packagingExcludes>
                        WEB-INF/lib/resteasy-jaxrs*.jar,
                        WEB-INF/lib/hibernate*.jar, WEB-INF/lib/hazelcast-all-3.2.3.jar
                    </packagingExcludes>
                    <webResources>
                        <webResource>
                            <directory>${basedir}/src/main/resources/META-INF</directory>
                            <includes>
                                <include>beans.xml</include>
                            </includes>
                            <targetPath>META-INF</targetPath>
                            <filtering>true</filtering>
                        </webResource>
                        <webResource>
                            <directory>${basedir}/src/main/resources/META-INF</directory>
                            <includes>
                                <include>jboss-all.xml</include>
                            </includes>
                            <targetPath>META-INF</targetPath>
                            <filtering>true</filtering>
                        </webResource>
                        
                        <!--PLEASE DO NOT REMOVE OR MODIFY THE COMMENTED AREA BELOW-->
                        <!--GRUNT_PLUGIN_START
						<resource>
							<directory>target-grunt/public/js</directory>
							<targetPath>emlogis/public/js</targetPath>
							<includes>
								<include>*.js</include>
							</includes>
						</resource>
						<resource>
							<directory>target-grunt/public/stylesheets</directory>
							<targetPath>emlogis/public/stylesheets</targetPath>
							<includes>
								<include>application.css</include>
								<include>application.css.map</include>
								<include>library.css</include>
								<include>library.css.map</include>
								<include>bootstrap.css.map</include>
								<include>bootstrap-theme.css.map</include>
							</includes>
						</resource>
						<resource>
							<directory>target-grunt/public/js</directory>
							<targetPath>../../src/main/webapp/emlogis/public/js</targetPath>
							<includes>
								<include>*.js</include>
							</includes>
						</resource>
						<resource>
							<directory>target-grunt/public/stylesheets</directory>
							<targetPath>../../src/main/webapp/emlogis/public/stylesheets</targetPath>
							<includes>
								<include>application.css</include>
								<include>application.css.map</include>
								<include>library.css</include>
								<include>library.css.map</include>
								<include>bootstrap.css.map</include>
								<include>bootstrap-theme.css.map</include>
							</includes>
						</resource>
						GRUNT_PLUGIN_END-->
						<!--PLEASE DO NOT REMOVE OR MODIFY THE COMMENTED AREA ABOVE-->
						
                    </webResources>                    
                </configuration>
            </plugin>
            <!-- WildFly plugin to deploy war -->
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>${version.wildfly.maven.plugin}</version>
            </plugin>
            <!-- Compiler plugin enforces Java 1.6 compatibility and activates 
                annotation processors -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${version.compiler.plugin}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
        	<plugins>
        		<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        		<plugin>
        			<groupId>org.eclipse.m2e</groupId>
        			<artifactId>lifecycle-mapping</artifactId>
        			<version>1.0.0</version>
        			<configuration>
        				<lifecycleMappingMetadata>
        					<pluginExecutions>
        						<pluginExecution>
        							<pluginExecutionFilter>
        								<groupId>
        									org.codehaus.mojo
        								</groupId>
        								<artifactId>
        									build-helper-maven-plugin
        								</artifactId>
        								<versionRange>
        									[1.8,)
        								</versionRange>
        								<goals>
        									<goal>add-source</goal>
        								</goals>
        							</pluginExecutionFilter>
        							<action>
        								<ignore></ignore>
        							</action>
        						</pluginExecution>
        						<pluginExecution>
        							<pluginExecutionFilter>
        								<groupId>pl.allegro</groupId>
        								<artifactId>
        									grunt-maven-plugin
        								</artifactId>
        								<versionRange>
        									[1.5.0,)
        								</versionRange>
        								<goals>
        									<goal>
        										create-resources
        									</goal>
        								</goals>
        							</pluginExecutionFilter>
        							<action>
        								<ignore></ignore>
        							</action>
        						</pluginExecution>
        					</pluginExecutions>
        				</lifecycleMappingMetadata>
        			</configuration>
        		</plugin>
        	</plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <!-- When built in OpenShift the 'openshift' profile will be used when invoking mvn. -->
            <!-- Use this profile for any OpenShift specific customization your app will need. -->
            <!-- By default that is to put the resulting archive into the 'deployments' folder. -->
            <!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
            <id>openshift</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>${version.war.plugin}</version>
                        <configuration>
                            <outputDirectory>deployments</outputDirectory>
                            <warName>ROOT</warName>
                            <!-- Java EE 7 doesn't require web.xml, Maven needs to catch up! -->
                            <failOnMissingWebXml>false</failOnMissingWebXml>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <packaging>war</packaging>
</project>
